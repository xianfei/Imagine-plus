name: Build/release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        buildarch: [x64, arm64]
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 20

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        if: matrix.buildarch == 'x64'
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.SECRET_TOKEN }}
          build_script_name: buildx64
          args: --x64

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/releases/') }}

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        if: matrix.buildarch == 'arm64' && matrix.os != 'windows-latest'
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.SECRET_TOKEN }}
          build_script_name: buildarm
          args: --arm64

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/releases/') }}
      
      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        if: matrix.buildarch == 'arm64' && matrix.os == 'windows-latest'
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.SECRET_TOKEN }}
          build_script_name: buildarmwin
          args: --arm64

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/releases/') }}
      
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.buildarch }}-CI_Build
          path: |
            dist/Imagine*.dmg
            dist/Imagine*.exe
            dist/Imagine*.AppImage
